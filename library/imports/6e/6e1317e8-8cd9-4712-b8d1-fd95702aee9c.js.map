{"version":3,"sources":["../../../assets/assets/RainMaterial.js"],"names":["renderEngine","cc","renderer","math","vmath","gfx","Material","RainShader","require","RainMaterial","call","pass","Pass","setDepth","setCullMode","CULL_NONE","setBlend","BLEND_FUNC_ADD","BLEND_SRC_ALPHA","BLEND_ONE_MINUS_SRC_ALPHA","mainTech","Technique","name","type","PARAM_TEXTURE_2D","PARAM_FLOAT2","PARAM_FLOAT3","PARAM_FLOAT","_texture","_resolution","vec3","create","_texSize","vec2","_time","_effect","effect","Effect","value","_mainTech","js","extend","mixin","prototype","getTexture","setTexture","val","update","flipY","mipmap","setProperty","getImpl","_texIds","getId","x","width","y","height","setResolution","w","h","setTime","time","setHasHeart","define","usePostProcessing","module","exports"],"mappings":"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","file":"RainMaterial.js","sourceRoot":"../../../assets","sourcesContent":["const renderEngine = cc.renderer.renderEngine;\nconst math = cc.vmath;\nconst renderer = renderEngine.renderer;\nconst gfx = renderEngine.gfx;\nconst Material = renderEngine.Material;\n\n// Require to load the shader to program lib\nconst RainShader = require('RainShader');\n\nfunction RainMaterial () {\n    Material.call(this, false);\n\n    var pass = new renderer.Pass('rainheart');\n    pass.setDepth(false, false);\n    pass.setCullMode(gfx.CULL_NONE);\n    pass.setBlend(\n        gfx.BLEND_FUNC_ADD,\n        gfx.BLEND_SRC_ALPHA, gfx.BLEND_ONE_MINUS_SRC_ALPHA,\n        gfx.BLEND_FUNC_ADD,\n        gfx.BLEND_SRC_ALPHA, gfx.BLEND_ONE_MINUS_SRC_ALPHA\n    );\n\n    let mainTech = new renderer.Technique(\n        ['transparent'],\n        [\n            { name: 'iTexture', type: renderer.PARAM_TEXTURE_2D },\n            { name: 'texSize', type: renderer.PARAM_FLOAT2 },\n            { name: 'iResolution', type: renderer.PARAM_FLOAT3 },\n            { name: 'iTime', type: renderer.PARAM_FLOAT },\n        ],\n        [\n            pass\n        ]\n    );\n\n    this._texture = null;\n    this._resolution = math.vec3.create();\n    this._texSize = math.vec2.create();\n    this._time = 0.0;\n\n    // need _effect to calculate hash\n    this._effect = this.effect = new renderer.Effect(\n        [\n            mainTech,\n        ],\n        {\n            'iResolution': this._resolution,\n            'texSize': this._texSize\n        },\n        [\n            { name: 'HAS_HEART', value: true },\n            { name: 'USE_POST_PROCESSING', value: true }\n        ]\n    );\n    \n    this._mainTech = mainTech;\n}\ncc.js.extend(RainMaterial, Material);\n\ncc.js.mixin(RainMaterial.prototype, {\n    getTexture () {\n        return this._texture;\n    },\n\n    setTexture (val) {\n        if (this._texture !== val) {\n            this._texture = val;\n            this._texture.update({\n                // Adapt to shader\n                flipY: true,\n                // For load texture\n                mipmap: true\n            });\n            this.effect.setProperty('iTexture', val.getImpl());\n            this._texIds['iTexture'] = val.getId();\n\n            this._texSize.x = this._texture.width;\n            this._texSize.y = this._texture.height;\n        }\n    },\n    \n    setResolution (w, h) {\n        this._resolution.x = w;\n        this._resolution.y = h;\n    },\n\n    setTime (time) {\n        this._time = time;\n        this.effect.setProperty('iTime', this._time);\n    },\n\n    setHasHeart (value) {\n        this.effect.define('HAS_HEART', !!value);\n    },\n\n    usePostProcessing (value) {\n        this.effect.define('USE_POST_PROCESSING', !!value);\n    }\n});\n\nmodule.exports = RainMaterial;"]}